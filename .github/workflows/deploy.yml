name: Deploy Pipeline with Docker and Kubernetes


on:
  pull_request:
    branches:
      - main
    types: [ closed ]
  workflow_dispatch:

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read
      id-token: write

    steps:
      # 1. Checkout do código
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configuração do .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      # 3. Restaurar dependências
      - name: Restore dependencies
        run: dotnet restore

      # 4. Build do projeto
      - name: Build
        run: dotnet build --no-restore

      # 5. Executar os testes
      - name: Run tests
        run: dotnet test --no-build --verbosity normal

      # 6. Publicar resultados dos testes
      - name: Publish test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: '**/TestResults/*.trx'

      # 7. Login no Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 8. Build e Push da Imagem Docker
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: src/Postech.Fiap.Products.WebApi/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/myfood-webapi:${{ github.sha }}
            ${{ secrets.DOCKER_USERNAME }}/myfood-webapi:latest
          labels: |
            org.opencontainers.image.source=${{ github.repository }}

      # 9. Autenticação no Azure para Kubernetes
      - name: Authenticate with Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # 10. Configurar credenciais do Kubernetes
      - name: Get Kubernetes Config
        run: |
          az aks get-credentials --resource-group rg-postech-fiap-k8s --name postech-fiap-k8s-cluster --overwrite-existing

      # 11. Instalar Helm
      - name: Install Helm
        uses: azure/setup-helm@v3

      # 12. Deploy no Kubernetes usando Helm
      - name: Deploy API to Kubernetes
        run: |
          helm upgrade --install myfood-webapi ./charts/webapi/ \
            --namespace myfood-namespace \
            --set image.repository=${{ secrets.DOCKER_USERNAME }}/myfood-webapi \
            --set image.tag=${{ github.sha }} \
            --create-namespace